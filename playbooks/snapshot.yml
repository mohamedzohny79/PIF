---
- name: Take Snapshot of the VMs before patching
  hosts: all
  gather_facts: true
  vars_files:
    - ../group_vars/all.yml
    - ../group_vars/vmware-creds.yml
  tasks:
    - name: Find the VM with a case-insensitve name match
      community.vmware.vmware_vm_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
      register: vm_info
      delegate_to: localhost
      when: take_snapshot == "yes"
    
    - name: Set the actual machine name
      when: take_snapshot == "yes"
      set_fact:
        hostname_lower: "{{ ansible_hostname | lower }}"
        hostname_upper: "{{ ansible_hostname | upper }}"
    - name: Find the VM by name
      when: take_snapshot == "yes"
      set_fact:
        actual_vm_name: >-
          {{
            vm_info.virtual_machines
            | selectattr('guest_name', 'match', '^(' + hostname_lower + '|' + hostname_upper + ')$', ignorecase=True)
            | list
            | first
            }}
    - name: Print the vm name
      when: take_snapshot == "yes"
      debug:
        var: actual_vm_name

    - name: Delete the old snapshot
      community.vmware.vmware.vm_snapshot:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        datacenter: "{{ vcenter_datacenter }}"
        folder: "{{ vcenter_vmfolder }}"
        name: "{{ actual_vm_name.guest_name }}"
        state: absent
        snapshot_name: "{{ snapshot_name }}"
        description: "{{ snapshot_description }}"
        memory_dump: no
        quiesce: yes
      become: false
      delegate_to: localhost
      ignore_errors: yes
      when: take_snapshot == "yes"
    - name: Wait for 10 seconds before creating a new snapshot
      ansible.builtin.pause:
        seconds: 10

 
    - name: Take a new snapshot
      community.vmware.vmware.vm_snapshot:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: no
        datacenter: "{{ vcenter_datacenter }}"
        folder: "{{ vcenter_vmfolder }}"
        name: "{{ actual_vm_name.guest_name }}"
        state: present
        snapshot_name: "{{ snapshot_name }}"
        description: "{{ snapshot_description }}"
        memory_dump: no
        quiesce: yes
      become: false
      delegate_to: localhost
      when: take_snapshot == "yes"
