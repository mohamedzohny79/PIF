---
- name: Check ping, script, and /Var space presence on all hosts
  hosts: all
  gather_facts: false
  vars:
    shell_script_path: "/root/scripts/before_patch.sh"   
  tasks:
    - name: Task 1 | Ping host (don’t stop on failure)
      ansible.builtin.ping:
      register: ping_result
      ignore_errors: true
      failed_when: false

    - name: Record ping status as a boolean
      ansible.builtin.set_fact:
        ping_ok: "{{ (ping_result.ping | default('')) == 'pong' }}"

    - name: Task 2 | Check if the shell script exists (don’t stop on failure)
      ansible.builtin.stat:
        path: "{{ shell_script_path }}"
      register: script_stat
      ignore_errors: true
      failed_when: false

    - name: Record script presence as a boolean
      ansible.builtin.set_fact:
        has_script: "{{ script_stat.stat.exists | default(false) }}"

    # --- NEW: Task 3 (/var free space) ----------------------------------------
    - name: Task 3 | Get /var free bytes (don’t stop on failure)
      ansible.builtin.shell: "df -B1 --output=avail /var | tail -n 1"
      register: df_var
      changed_when: false
      ignore_errors: true
      failed_when: false

    - name: Compute /var free in GB and OK flag (>= 5 GB)
      ansible.builtin.set_fact:
        var_free_bytes: "{{ (df_var.stdout | default('0') | trim) | int }}"
        var_free_gb: "{{ ((df_var.stdout | default('0') | trim) | int / 1073741824) | float | round(2) }}"
        var_ok: "{{ ((df_var.stdout | default('0') | trim) | int) >= (2 * 1073741824) }}"


- name: Summarize results
  hosts: all
  gather_facts: false
  vars:
    all_hosts: "{{ groups['all'] | default([]) }}"
    var_threshold_gb: 5 
  tasks:
    - name: Init summary lists
      ansible.builtin.set_fact:
        down_hosts: []
        missing_script_hosts: []
        low_var_hosts: []

    - name: Collect hosts that did NOT respond to ping
      ansible.builtin.set_fact:
        down_hosts: "{{ down_hosts + [item] }}"
      loop: "{{ all_hosts }}"
      when: "not (hostvars[item].ping_ok | default(false))"

    - name: Collect hosts that are missing the script (reachable only)
      ansible.builtin.set_fact:
        missing_script_hosts: "{{ missing_script_hosts + [item] }}"
      loop: "{{ all_hosts }}"
      when: >
        (hostvars[item].ping_ok | default(false))
        and not (hostvars[item].has_script | default(false))
    - name: Collect hosts with low /var free space (< 5 GB)
      ansible.builtin.set_fact:
        low_var_hosts: "{{ low_var_hosts + [item] }}"
      loop: "{{ all_hosts }}"
      when: >
        (hostvars[item].ping_ok | default(false))
        and not (hostvars[item].var_ok | default(false))
    - name: Derive script path value (from any host)
      ansible.builtin.set_fact:
        script_path_checked: >-
          {{ (groups['all']
              | map('extract', hostvars)
              | map(attribute='shell_script_path')
              | select('defined')
              | list
              | first) | default('N/A') }}

    - name: Show list of hosts that did NOT respond to ping
      ansible.builtin.debug:
        msg:
          - "Shell script path checked: {{ script_path_checked }}"
          - "Non-responsive hosts: {{ down_hosts | default([]) }}"
      run_once: true

    - name: Show list of hosts missing the script (reachable only)
      ansible.builtin.debug:
        msg:
          - "Shell script path checked: {{ script_path_checked }}"
          - "Hosts missing script: {{ missing_script_hosts | default([]) }}"
      run_once: true
    - name: Show hosts with /var free < 5 GB (reachable only)
      ansible.builtin.debug:
        msg:
          - "Threshold: 5 GB"
          - "Hosts with low /var: {{ low_var_hosts | default([]) }}"
      run_once: true

    - name: Final gate | Fail if any host is down, missing script, or low /var
      ansible.builtin.assert:
        that:
          - (down_hosts | length) == 0
          - (missing_script_hosts | length) == 0
          - (low_var_hosts | length) == 0
        fail_msg: >-
          Health check FAILED.
          Non-responsive hosts: {{ down_hosts | default([]) }};
          Hosts missing script: {{ missing_script_hosts | default([]) }};
          Low /var (< {{ var_threshold_gb }} GB): {{ low_var_hosts | default([]) }}
        success_msg: >-
          Health check PASSED. All hosts reachable, script present, and /var >= {{ var_threshold_gb }} GB on reachable hosts.
      run_once: true
